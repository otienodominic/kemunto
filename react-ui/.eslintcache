[{"D:\\kemunto\\react-ui\\src\\index.js":"1","D:\\kemunto\\react-ui\\src\\reportWebVitals.js":"2","D:\\kemunto\\react-ui\\src\\pages\\home.js":"3","D:\\kemunto\\react-ui\\src\\serviceWorker.js":"4","D:\\kemunto\\react-ui\\src\\pages\\Home.js":"5","D:\\kemunto\\react-ui\\src\\store.js":"6","D:\\kemunto\\react-ui\\src\\routes\\AppRouter.js":"7","D:\\kemunto\\react-ui\\src\\actions\\app.js":"8","D:\\kemunto\\react-ui\\src\\reducers\\posts.js":"9","D:\\kemunto\\react-ui\\src\\reducers\\app.js":"10","D:\\kemunto\\react-ui\\src\\reducers\\users.js":"11","D:\\kemunto\\react-ui\\src\\reducers\\profile.js":"12","D:\\kemunto\\react-ui\\src\\pages\\Error.js":"13","D:\\kemunto\\react-ui\\src\\pages\\Explore.js":"14","D:\\kemunto\\react-ui\\src\\components\\NewPostModal.js":"15","D:\\kemunto\\react-ui\\src\\pages\\Profile.js":"16","D:\\kemunto\\react-ui\\src\\components\\SettingsModal.js":"17","D:\\kemunto\\react-ui\\src\\components\\Navbar.js":"18","D:\\kemunto\\react-ui\\src\\api\\api.js":"19","D:\\kemunto\\react-ui\\src\\actions\\users.js":"20","D:\\kemunto\\react-ui\\src\\actions\\posts.js":"21","D:\\kemunto\\react-ui\\src\\actions\\profile.js":"22","D:\\kemunto\\react-ui\\src\\components\\AuthForm.js":"23","D:\\kemunto\\react-ui\\src\\components\\Loading.js":"24","D:\\kemunto\\react-ui\\src\\components\\UserCard.js":"25","D:\\kemunto\\react-ui\\src\\components\\Post.js":"26","D:\\kemunto\\react-ui\\src\\actions\\settings.js":"27","D:\\kemunto\\react-ui\\src\\components\\NewPostForm.js":"28","D:\\kemunto\\react-ui\\src\\components\\ProfilePictureModal.js":"29","D:\\kemunto\\react-ui\\src\\components\\Auth.js":"30"},{"size":545,"mtime":1615222385293,"results":"31","hashOfConfig":"32"},{"size":401,"mtime":1610030417102,"results":"33","hashOfConfig":"32"},{"size":722,"mtime":1614579275335,"results":"34","hashOfConfig":"32"},{"size":5083,"mtime":1606296850608,"results":"35","hashOfConfig":"32"},{"size":5041,"mtime":1615218587942,"results":"36","hashOfConfig":"32"},{"size":601,"mtime":1615217367325,"results":"37","hashOfConfig":"32"},{"size":1305,"mtime":1615218901329,"results":"38","hashOfConfig":"32"},{"size":4635,"mtime":1615216562883,"results":"39","hashOfConfig":"32"},{"size":3276,"mtime":1615218777662,"results":"40","hashOfConfig":"32"},{"size":3612,"mtime":1615218750561,"results":"41","hashOfConfig":"32"},{"size":578,"mtime":1615218851279,"results":"42","hashOfConfig":"32"},{"size":1399,"mtime":1615218803517,"results":"43","hashOfConfig":"32"},{"size":591,"mtime":1615218620102,"results":"44","hashOfConfig":"32"},{"size":2356,"mtime":1615218650845,"results":"45","hashOfConfig":"32"},{"size":1028,"mtime":1615218390367,"results":"46","hashOfConfig":"32"},{"size":8093,"mtime":1615225356503,"results":"47","hashOfConfig":"32"},{"size":1752,"mtime":1615218407626,"results":"48","hashOfConfig":"32"},{"size":4104,"mtime":1615217927308,"results":"49","hashOfConfig":"32"},{"size":3140,"mtime":1615224328205,"results":"50","hashOfConfig":"32"},{"size":887,"mtime":1615216696008,"results":"51","hashOfConfig":"32"},{"size":4891,"mtime":1615216596020,"results":"52","hashOfConfig":"32"},{"size":2555,"mtime":1615216823725,"results":"53","hashOfConfig":"32"},{"size":1937,"mtime":1615217832104,"results":"54","hashOfConfig":"32"},{"size":191,"mtime":1615217886195,"results":"55","hashOfConfig":"32"},{"size":1106,"mtime":1615218492055,"results":"56","hashOfConfig":"32"},{"size":3998,"mtime":1615218434458,"results":"57","hashOfConfig":"32"},{"size":1473,"mtime":1615216667772,"results":"58","hashOfConfig":"32"},{"size":3272,"mtime":1615218383225,"results":"59","hashOfConfig":"32"},{"size":3628,"mtime":1615223057795,"results":"60","hashOfConfig":"32"},{"size":619,"mtime":1615217791751,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"y1nony",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"65"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"65"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"65"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"65"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"65"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"65"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"65"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"D:\\kemunto\\react-ui\\src\\index.js",["146"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport { reconnect } from './actions/app';;\r\nimport AppRouter from './routes/AppRouter';\r\n// import './styles/Main.scss';\r\n\r\nconst store = Store;\r\n\r\nconst last_session = localStorage.getItem('last_session');\r\n\r\nif (last_session) {\r\n  store.dispatch(reconnect(JSON.parse(last_session)));\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppRouter />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);",["147","148"],"D:\\kemunto\\react-ui\\src\\reportWebVitals.js",[],["149","150"],"D:\\kemunto\\react-ui\\src\\pages\\home.js",["151","152","153"],"D:\\kemunto\\react-ui\\src\\serviceWorker.js",[],["154","155"],"D:\\kemunto\\react-ui\\src\\pages\\Home.js",["156","157","158","159"],"import React, { Component } from 'react';\r\nimport AuthForm from '../components/AuthForm';\r\nimport Logo from '../assets/images/logo.png';\r\nimport { connect } from 'react-redux';\r\nimport { toggleNavbar } from '../actions/app';\r\nimport { Link } from 'react-router-dom';\r\nimport { signIn } from '../actions/app';\r\nimport { signUp } from '../actions/app';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signMode: 'menu',\r\n      phrases: [\r\n        {\r\n          extra: \"William Shakespeare - All's Well That Ends Well\",\r\n          quote: 'What is a friend?\\nA single soul dwelling in two bodies.',\r\n        },\r\n        {\r\n          extra: \"Aristotle\",\r\n          quote: 'Love all, trust a few, do wrong to none.',\r\n        },\r\n        {\r\n          extra: 'Marcus Aurelius - Meditations',\r\n          quote: 'The soul becomes dyed\\nwith the colour of its thoughts.',\r\n        },\r\n        {\r\n          extra: 'Marcus Aurelius - Meditations',\r\n          quote: 'The happiness of your life depends\\nupon the quality of your thoughts.',\r\n        },\r\n        {\r\n          extra: 'Marcus Aurelius - Meditations',\r\n          quote: 'The best revenge is to be\\nunlike him who performed the injury',\r\n        }\r\n      ],\r\n      selectedPhrase: {}\r\n    }\r\n\r\n    this.getAuthComponent = this.getAuthComponent.bind(this);\r\n    this.setMenuMode = this.setMenuMode.bind(this);\r\n    this.setLoginMode = this.setLoginMode.bind(this);\r\n    this.setSignupMode = this.setSignupMode.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.isLogged)\r\n      this.props.history.push(`/u/${this.props.user}`)\r\n\r\n    const randomNumber = Math.floor(Math.random() * this.state.phrases.length)\r\n    this.setState(() => ({\r\n      selectedPhrase: this.state.phrases[randomNumber]\r\n    }));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.isLogged)\r\n      this.props.history.push(`/u/${this.props.user}`)\r\n  }\r\n\r\n  setLoginMode() {\r\n    this.setState(() => ({ signMode: 'login' }))\r\n  }\r\n\r\n  setMenuMode() {\r\n    this.setState(() => ({ signMode: 'menu' }))\r\n  }\r\n\r\n  setSignupMode() {\r\n    this.setState(() => ({ signMode: 'signup' }))\r\n  }\r\n\r\n  getAuthComponent() {\r\n    const signMode = this.state.signMode;\r\n\r\n    switch (signMode) {\r\n      case 'signup':\r\n        return <AuthForm type=\"signup\" backMethod={this.setMenuMode} onSuccess={this.props.signUp} />\r\n      case 'login':\r\n        return <AuthForm type=\"login\" backMethod={this.setMenuMode} onSuccess={this.props.signIn} />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"row h-100\">\r\n          <div className=\"col-8 d-none d-md-flex flex-column justify-content-end pl-5 home__left\">\r\n            <h1 className=\"display-7 text-light home__left__text\">\r\n              {this.state.selectedPhrase.quote}\r\n            </h1>\r\n            {!!this.state.selectedPhrase.extra &&\r\n              <p className=\"text-light lead home__left__tex\">{this.state.selectedPhrase.extra}</p>\r\n            }\r\n          </div>\r\n          <div className=\"col-12 col-md-4 bg-white home__right d-flex flex-column justify-content-center\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-6\">\r\n                <img src={Logo} className=\"mx-auto d-block img-fluid\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row pr-md-3\">\r\n              <div className=\"col-12 px-4\">\r\n                <div className=\"card border-0 rounded-0\">\r\n                  <div className=\"card-body\">\r\n                    {this.state.signMode == 'menu' &&\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-outline-brand btn-block rounded-pill\"\r\n                          onClick={this.setSignupMode}>Sign Up</button>\r\n                        <button\r\n                          className=\"btn btn-brand btn-block text-light rounded-pill\"\r\n                          onClick={this.setLoginMode}>Log In</button>\r\n                        <hr />\r\n                        <Link to=\"/explore\"\r\n                          className=\"btn btn-brand-secondary btn-block text-white rounded-pill\">\r\n                          I'd like to explore first 🧭\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n                      </div>\r\n                    }\r\n                    {this.state.signMode != 'menu' &&\r\n                      <>\r\n                        {this.getAuthComponent()}\r\n                      </>\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  isLogged: state.app.logged.isLogged,\r\n  user: state.app.logged.username\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  toggleNavbar: value => dispatch(toggleNavbar(value)),\r\n  signIn: value => dispatch(signIn(value)),\r\n  signUp: value => dispatch(signUp(value))\r\n})\r\n\r\nexport default connect(stateToProps, dispatchToProps)(Home);","D:\\kemunto\\react-ui\\src\\store.js",[],"D:\\kemunto\\react-ui\\src\\routes\\AppRouter.js",["160"],"import React, { Component, Fragment, Suspense, lazy } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nconst Home = lazy(() => import('../pages/Home'));\r\nconst Profile = lazy(() => import('../pages/Profile'));\r\nconst Error = lazy(() => import('../pages/Error'));\r\nconst Explore = lazy(() => import('../pages/Explore'));\r\nconst NewPostModal = lazy(() => import('../components/NewPostModal'));\r\nconst SettingsModal = lazy(() => import('../components/SettingsModal'));\r\nconst Navbar = lazy(() => import('../components/Navbar'));\r\n\r\nclass AppRouter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Suspense fallback={<div></div>}>\r\n          <Switch>\r\n            <Route path=\"/\" component={Home} exact />\r\n            <Fragment>\r\n              <div className=\"d-flex page\">\r\n                <NewPostModal />\r\n                <SettingsModal />\r\n                <Route path=\"/explore\" component={Explore} />\r\n                <Route path=\"/u/:id\" component={Profile} />\r\n                <Navbar />\r\n              </div>\r\n            </Fragment>\r\n            <Route component={Error} />\r\n          </Switch>\r\n        </Suspense>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppRouter;","D:\\kemunto\\react-ui\\src\\actions\\app.js",["161","162"],"import cogoToast from 'cogo-toast';\r\nimport api from '../api/api';\r\n\r\nconst API = new api();\r\n\r\nexport const TOGGLE_NAVBAR = '[APP] TOGGLE_NAVBAR';\r\nexport const TOGGLE_POST_MODAL = '[APP] TOGGLE_POST_MODAL';\r\nexport const TOGGLE_PROFILE_PICTURE_MODAL = '[APP] TOGGLE_PROFILE_PICTURE_MODAL';\r\nexport const TOGGLE_SETTINGS_MODAL = '[APP] TOGGLE_SETTINGS_MODAL';\r\nexport const SET_PROFILE_PRIVACY = '[APP] SET_PROFILE_PRIVACY';\r\nexport const SIGN_UP = '[APP] SIGN_UP';\r\nexport const SIGN_IN = '[APP] SIGN_IN';\r\nexport const RECONNECT = '[APP] RECONNECT';\r\nexport const LOGOUT = '[APP] LOGOUT';\r\nexport const SET_SETTINGS_LOADING = '[APP] SET_SETTINGS_LOADING';\r\nexport const SET_LOGIN_LOADING = '[APP] SET_LOGIN_LOADING';\r\nexport const SET_PROFILE_PICTURE = '[APP] SET_PROFILE_PICTURE';\r\nexport const RESET_LAST_CONNECTION = '[APP] RESET_LAST_CONNECTION';\r\nexport const SET_PROFILE_DESCRIPTION = '[APP] SET_PROFILE_DESCRIPTION';\r\nexport const ERROR = '[APP] ERROR';\r\n\r\n\r\nexport const setLoginLoad = (value) => {\r\n  return dispatch => dispatch({\r\n    type: SET_LOGIN_LOADING,\r\n    payload: {\r\n      value\r\n    }\r\n  })\r\n}\r\n\r\nexport const setSettingsLoad = (value) => {\r\n  return dispatch => dispatch({\r\n    type: SET_SETTINGS_LOADING,\r\n    payload: {\r\n      value\r\n    }\r\n  })\r\n};\r\n\r\nexport const togglePostModal = () => {\r\n  return dispatch => dispatch({\r\n    type: TOGGLE_POST_MODAL\r\n  });\r\n}\r\n\r\nexport const toggleSettingsModal = () => {\r\n  return dispatch => dispatch({\r\n    type: TOGGLE_SETTINGS_MODAL\r\n  });\r\n}\r\n\r\nexport const toggleProfilePictureModal = () => {\r\n  return dispatch => dispatch({\r\n    type: TOGGLE_PROFILE_PICTURE_MODAL\r\n  });\r\n}\r\n\r\nexport const toggleProfilePrivacy = () => {\r\n  return dispatch => {\r\n    dispatch(setSettingsLoad(true));\r\n\r\n    API.patch('user/settings/privacy')\r\n      .then(res => {\r\n        dispatch({\r\n          type: SET_PROFILE_PRIVACY,\r\n          payload: res.response\r\n        });\r\n      })\r\n      .catch(e => console.log(e))\r\n      .then(() => {\r\n        dispatch(resetLastConnection());\r\n        dispatch(setSettingsLoad(false))\r\n      });\r\n  }\r\n}\r\nexport const reconnect = (last_session) => {\r\n  return dispatch => {\r\n    dispatch(setLoginLoad(true));\r\n\r\n    dispatch({\r\n      type: RECONNECT,\r\n      payload: {\r\n        last_session\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const resetLastConnection = () => {\r\n  return dispatch => dispatch({\r\n    type: RESET_LAST_CONNECTION\r\n  });\r\n}\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    localStorage.removeItem('last_session');\r\n    dispatch(setLoginLoad(true));\r\n    dispatch({\r\n      type: LOGOUT\r\n    })\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nexport const signUp = ({ username, password }) => {\r\n\r\n  return dispatch => {\r\n    dispatch(setLoginLoad(true));\r\n\r\n    API.post('auth/sign-up', { username, password })\r\n      .then(res => {\r\n        if (res.code == 200) {\r\n          cogoToast.success(`Welcome aboard @${res.response.username}!`, {\r\n            position: 'bottom-right'\r\n          });\r\n          dispatch({\r\n            type: SIGN_UP,\r\n            payload: {\r\n              ...res.response\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch(e => console.log(e))\r\n      .then(() => dispatch(setLoginLoad(false)));\r\n  }\r\n}\r\n\r\nexport const signIn = ({ username, password }) => {\r\n  return dispatch => {\r\n    dispatch(setLoginLoad(true));\r\n\r\n    API.post('auth/sign-in', { username, password })\r\n      .then(res => {\r\n        if (res.code == 200) {\r\n          cogoToast.success(`Welcome back @${res.response.username} :)!`, {\r\n            position: 'bottom-right'\r\n          });\r\n          dispatch({\r\n            type: SIGN_IN,\r\n            payload: {\r\n              ...res.response\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch(e => console.log(e))\r\n      .then(() => dispatch(setLoginLoad(false)));\r\n  }\r\n}\r\n\r\nexport const setProfilePic = url => {\r\n  return dispatch => {\r\n    cogoToast.success(`Profile picture updated!`, {\r\n      position: 'bottom-right'\r\n    });\r\n    dispatch({\r\n      type: SET_PROFILE_PICTURE,\r\n      payload: {\r\n        url\r\n      }\r\n    });\r\n\r\n    dispatch(resetLastConnection());\r\n  }\r\n}\r\n\r\nexport const setDescription = description => {\r\n  return dispatch => {\r\n    cogoToast.success(`Description updated!`, {\r\n      position: 'bottom-right'\r\n    });\r\n    dispatch({\r\n      type: SET_PROFILE_DESCRIPTION,\r\n      payload: {\r\n        description\r\n      }\r\n    });\r\n\r\n    dispatch(resetLastConnection())\r\n  }\r\n}\r\n\r\nexport const toggleNavbar = (value) => {\r\n  return dispatch => dispatch({\r\n    type: TOGGLE_NAVBAR,\r\n    payload: {\r\n      value\r\n    }\r\n  })\r\n}","D:\\kemunto\\react-ui\\src\\reducers\\posts.js",["163","164","165","166","167"],"import {\r\n    DISCOVER_POSTS,\r\n    DELETE_POST,\r\n    NEW_POST,\r\n    RESTART_STATE,\r\n    SET_LOADING,\r\n    FETCH_USER_POSTS,\r\n    LIKE_POST,\r\n    UNLIKE_POST,\r\n    UPDATE_PROFILE_PICTURE\r\n  } from '../actions/posts';\r\n  \r\n  const defaultState = {\r\n    loading: false,\r\n    isThereMore: true,\r\n    offset: 0,\r\n    quantity: 5,\r\n    items: []\r\n  }\r\n  \r\n  export default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_USER_POSTS:\r\n        return {\r\n          ...state,\r\n          isThereMore: !!action.payload.length,\r\n          offset: state.offset + state.quantity,\r\n          items: [\r\n            ...state.items,\r\n            ...action.payload.map(post => ({\r\n              ...post,\r\n              author: {\r\n                ...post.author,\r\n                profilePic: post.author.profilePic\r\n              }\r\n            }))\r\n          ]\r\n        }\r\n      case DISCOVER_POSTS:\r\n        return {\r\n          ...state,\r\n          items: [\r\n            ...state.items,\r\n            ...action.payload.map(post => ({\r\n              ...post,\r\n              author: {\r\n                ...post.author,\r\n                profilePic: post.author.profilePic\r\n              }\r\n            }))\r\n          ]\r\n        }\r\n      case NEW_POST:\r\n        return {\r\n          ...state,\r\n          items: [\r\n            {\r\n              ...action.payload.newPost,\r\n              author: {\r\n                ...action.payload.newPost.author,\r\n                profilePic: action.payload.newPost.author.profilePic\r\n              }\r\n            },\r\n            ...state.items\r\n          ]\r\n        }\r\n      case LIKE_POST:\r\n        const { likedPost } = action.payload;\r\n  \r\n        return {\r\n          ...state,\r\n          items: state.items.map(post => post._id == likedPost._id\r\n            ? {\r\n              ...post,\r\n              likes: likedPost.likes,\r\n              likedBy: likedPost.likedBy,\r\n              liked: true\r\n            }\r\n            : post\r\n          )\r\n        }\r\n      case UNLIKE_POST:\r\n        const { unlikedPost } = action.payload;\r\n  \r\n        return {\r\n          ...state,\r\n          items: state.items.map(post => post._id == unlikedPost._id\r\n            ? {\r\n              ...post,\r\n              likes: unlikedPost.likes,\r\n              likedBy: unlikedPost.likedBy,\r\n              liked: false\r\n            }\r\n            : post\r\n          )\r\n        }\r\n      case DELETE_POST:\r\n        return {\r\n          ...state,\r\n          items: state.items.filter(post => post._id != action.payload.deletedPost._id)\r\n        }\r\n      case SET_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: action.payload.loading\r\n        }\r\n      case UPDATE_PROFILE_PICTURE:\r\n        const username = action.payload.username;\r\n        const items = state.items.map(post => {\r\n          if (post.author.username == username) {\r\n            return {\r\n              ...post,\r\n              author: {\r\n                ...post.author,\r\n                profilePic: action.payload.url\r\n              }\r\n            }\r\n          } else {\r\n            return post;\r\n          }\r\n        });\r\n  \r\n        return { ...state, items }\r\n  \r\n      case RESTART_STATE:\r\n        return defaultState;\r\n      default:\r\n        return state;\r\n    }\r\n  }","D:\\kemunto\\react-ui\\src\\reducers\\app.js",["168"],"import {\r\n    TOGGLE_NAVBAR,\r\n    TOGGLE_POST_MODAL,\r\n    TOGGLE_PROFILE_PICTURE_MODAL,\r\n    SET_LOGIN_LOADING,\r\n    SIGN_UP,\r\n    SIGN_IN,\r\n    RECONNECT,\r\n    LOGOUT,\r\n    SET_PROFILE_PICTURE,\r\n    SET_PROFILE_DESCRIPTION,\r\n    SET_PROFILE_PRIVACY,\r\n    TOGGLE_SETTINGS_MODAL,\r\n    SET_SETTINGS_LOADING,\r\n    RESET_LAST_CONNECTION\r\n  } from '../actions/app';\r\n  \r\n  const defaultState = {\r\n    profilePicModal: {\r\n      isVisible: false\r\n    },\r\n    postModal: {\r\n      isVisible: false\r\n    },\r\n    settingsModal: {\r\n      isVisible: false,\r\n      loading: false\r\n    },\r\n    navbar: {\r\n      isVisible: true\r\n    },\r\n    logged: {\r\n      isLoading: false,\r\n      isLogged: false,\r\n      token: null,\r\n      username: null,\r\n      profilePic: null,\r\n      description: null,\r\n      openProfile: null,\r\n      error: null\r\n    }\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n      case TOGGLE_NAVBAR:\r\n        const { value: isVisible } = action.payload;\r\n        return {\r\n          ...state,\r\n          navbar: {\r\n            isVisible\r\n          }\r\n        }\r\n      case TOGGLE_SETTINGS_MODAL:\r\n        return {\r\n          ...state,\r\n          settingsModal: {\r\n            ...state.settingsModal,\r\n            isVisible: !state.settingsModal.isVisible\r\n          }\r\n        }\r\n      case TOGGLE_POST_MODAL:\r\n        return {\r\n          ...state,\r\n          postModal: {\r\n            isVisible: !state.postModal.isVisible\r\n          }\r\n        };\r\n      case TOGGLE_PROFILE_PICTURE_MODAL:\r\n        return {\r\n          ...state,\r\n          profilePicModal: {\r\n            isVisible: !state.profilePicModal.isVisible\r\n          }\r\n        }\r\n      case SET_PROFILE_PRIVACY:\r\n        return {\r\n          ...state,\r\n          logged: {\r\n            ...state.logged,\r\n            openProfile: action.payload.openProfile\r\n          }\r\n        }\r\n      case SET_LOGIN_LOADING:\r\n        const { value: isLoading } = action.payload;\r\n        return {\r\n          ...state,\r\n          logged: {\r\n            ...state.logged,\r\n            isLoading\r\n          }\r\n        }\r\n      case SET_SETTINGS_LOADING:\r\n        return {\r\n          ...state,\r\n          settingsModal: {\r\n            ...state.settingsModal,\r\n            loading: action.payload.value\r\n          }\r\n        }\r\n      case SET_PROFILE_PICTURE:\r\n        return {\r\n          ...state,\r\n          logged: {\r\n            ...state.logged,\r\n            profilePic: action.payload.url\r\n          }\r\n        }\r\n      case SET_PROFILE_DESCRIPTION:\r\n        return {\r\n          ...state,\r\n          logged: {\r\n            ...state.logged,\r\n            description: action.payload.description\r\n          }\r\n        }\r\n      case SIGN_UP:\r\n      case SIGN_IN:\r\n        localStorage.setItem('last_session', JSON.stringify({ ...action.payload }));\r\n        return {\r\n          ...state,\r\n          logged: {\r\n            isLoading: false,\r\n            isLogged: true,\r\n            ...action.payload\r\n          }\r\n        }\r\n      case RECONNECT:\r\n        const { last_session } = action.payload;\r\n        return {\r\n          ...state,\r\n          logged: {\r\n            ...last_session,\r\n            isLoading: false,\r\n            isLogged: true,\r\n            profilePic: last_session.profilePic\r\n          }\r\n        }\r\n      case RESET_LAST_CONNECTION:\r\n        localStorage.setItem('last_session', JSON.stringify({ ...state.logged }));\r\n        return state;\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          logged: defaultState.logged\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }","D:\\kemunto\\react-ui\\src\\reducers\\users.js",["169"],"import { DISCOVER_USERS, SET_LOADING, RESTART_STATE } from '../actions/users';\r\nconst defaultState = {\r\n  loading: false,\r\n  items: []\r\n}\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case DISCOVER_USERS:\r\n      return {\r\n        ...state,\r\n        items: action.payload.map(user => ({ ...user, profilePic: user.profilePic }))\r\n      }\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload.loading\r\n      }\r\n    case RESTART_STATE:\r\n      return defaultState;\r\n    default:\r\n      return state;\r\n  }\r\n}","D:\\kemunto\\react-ui\\src\\reducers\\profile.js",["170"],"import {\r\n    FETCH_PROFILE,\r\n    RESTART_STATE,\r\n    SET_LOADING,\r\n    UPDATE_PROFILE_PICTURE,\r\n    SET_PROFILE_DESCRIPTION,\r\n    TOGGLE_EDITING_DESCRIPTION,\r\n    TOGGLE_SIDENAV\r\n  } from '../actions/profile';\r\n  \r\n  const defaultState = {\r\n    loading: true,\r\n    visibleSidenav: true,\r\n    editingDescription: false,\r\n    username: null,\r\n    description: null,\r\n    profilePic: null\r\n  }\r\n  \r\n  export default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n      case TOGGLE_SIDENAV:\r\n        return {\r\n          ...state,\r\n          visibleSidenav: !state.visibleSidenav\r\n        }\r\n      case TOGGLE_EDITING_DESCRIPTION:\r\n        return {\r\n          ...state,\r\n          editingDescription: !state.editingDescription\r\n        }\r\n      case FETCH_PROFILE:\r\n        return {\r\n          ...state,\r\n          ...action.payload,\r\n          profilePic: action.payload.profilePic\r\n        }\r\n      case SET_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: action.payload.loading\r\n        }\r\n      case UPDATE_PROFILE_PICTURE:\r\n        return {\r\n          ...state,\r\n          profilePic: action.payload.url\r\n        }\r\n      case SET_PROFILE_DESCRIPTION:\r\n        return {\r\n          ...state,\r\n          description: action.payload.description\r\n        }\r\n      case RESTART_STATE:\r\n        return defaultState;\r\n      default:\r\n        return state;\r\n    }\r\n  }","D:\\kemunto\\react-ui\\src\\pages\\Error.js",["171"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Error extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 pt-5\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-6 text-center\">\r\n            <h1 className=\"display-1\">ಥ﹏ಥ</h1>\r\n            <p className=\"lead\">404 Page not found.</p>\r\n            <Link to=\"/\">Back to HomePage</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Error;","D:\\kemunto\\react-ui\\src\\pages\\Explore.js",["172"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { discoverPosts, restartState as restartStatePosts } from '../actions/posts';\r\nimport { discoverUsers, restartState as restartStateUsers } from '../actions/users';\r\nimport UserCard from '../components/UserCard';\r\nimport Post from '../components/Post';\r\nimport Loading from '../components/Loading';\r\nimport BottomScrollListener from 'react-bottom-scroll-listener';\r\n\r\nclass Explore extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.discoverPosts();\r\n    this.props.discoverUsers();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.restartState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container my-5\">\r\n        <h2 className=\"montserrat\">Discover users</h2>\r\n        <div className=\"d-inline-flex flex-row w-100 mb-5\" style={{ 'overflowX': 'scroll', 'overflowY': 'hidden', 'minHeight': '100px' }}>\r\n          {this.props.usersLoading && <div className=\"d-flex justify-content-center m-auto\"><Loading /></div>}\r\n          {this.props.users.map(user =>\r\n            <div className={'mx-3 mx-md-5 px-md-5 animated fadeIn'} key={user._id}>\r\n              <UserCard {...user} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <h2 className=\"montserrat\">Explore posts</h2>\r\n        <div className=\"row mt-5\">\r\n          <BottomScrollListener onBottom={this.props.discoverPosts}>\r\n            {this.props.posts.map((post, i) =>\r\n              <div className='col-12 col-md-6 animated fadeIn' key={post._id + i}>\r\n                <Post {...post} />\r\n              </div>\r\n            )}\r\n            {this.props.postsLoading && <div className=\"d-flex justify-content-center m-auto my-5 py-5\"><Loading /></div>}\r\n          </BottomScrollListener>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  posts: state.posts.items,\r\n  postsLoading: state.posts.loading,\r\n  users: state.users.items,\r\n  usersLoading: state.users.loading\r\n})\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  discoverPosts: () => dispatch(discoverPosts()),\r\n  discoverUsers: () => dispatch(discoverUsers()),\r\n  restartState: () => {\r\n    dispatch(restartStatePosts());\r\n    dispatch(restartStateUsers());\r\n  }\r\n})\r\n\r\nexport default connect(stateToProps, dispatchToProps)(Explore);","D:\\kemunto\\react-ui\\src\\components\\NewPostModal.js",["173"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NewPostForm from './NewPostForm';\r\nimport Rodal from 'rodal';\r\nimport { togglePostModal } from '../actions/app';\r\n\r\nimport 'rodal/lib/rodal.css';\r\n\r\nclass NewPostModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const modalCustomStyles = {\r\n      height: 'fit-content'\r\n    };\r\n\r\n    return (\r\n      <Rodal\r\n        visible={this.props.isVisible}\r\n        onClose={this.props.togglePostModal}\r\n        animation={'slideUp'}\r\n        customStyles={modalCustomStyles}>\r\n        <NewPostForm profileId={this.props.profileId} onSuccess={this.props.togglePostModal} />\r\n      </Rodal>\r\n    );\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  profileId: state.app.logged.username,\r\n  isVisible: state.app.postModal.isVisible\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  togglePostModal: () => dispatch(togglePostModal())\r\n})\r\n\r\nexport default connect(stateToProps, dispatchToProps)(NewPostModal);","D:\\kemunto\\react-ui\\src\\pages\\Profile.js",["174"],"D:\\kemunto\\react-ui\\src\\components\\SettingsModal.js",[],"D:\\kemunto\\react-ui\\src\\components\\Navbar.js",["175","176","177","178","179","180"],"import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout, togglePostModal, toggleSettingsModal } from '../actions/app';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport NewPostModal from './NewPostModal';\r\nimport Auth from \"./Auth\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        {this.props.isVisible &&\r\n          <div className=\"navbar-cs bg-light d-flex flex-column justify-content-between\">\r\n            <div className=\"d-flex flex-row flex-md-column\">\r\n              <Auth>\r\n                <NavLink\r\n                  to={'/u/' + this.props.profile.username}\r\n                  className=\"navbar-cs__button\"\r\n                  data-balloon-pos=\"left\"\r\n                  aria-label=\"Profile\"\r\n                  data-balloon-blunt>\r\n                  <img src={this.props.profile.profilePic} style={{ 'width': '35px', 'height': '35px' }} className='img-fluid d-block mx-auto rounded-circle' />\r\n                </NavLink>\r\n                <div\r\n                  className=\"navbar-cs__button\" onClick={this.props.toggleSettingsModal}\r\n                  data-balloon-pos=\"left\"\r\n                  aria-label=\"Settings\"\r\n                  data-balloon-blunt>\r\n                  <p className=\"text-center my-0\"><i className=\"fas fa-cog fa-2x\"></i></p>\r\n                </div>\r\n                <div\r\n                  className=\"navbar-cs__button\" onClick={this.props.togglePostModal}\r\n                  data-balloon-pos=\"left\"\r\n                  aria-label=\"Submit a post\"\r\n                  data-balloon-blunt>\r\n                  <p className=\"text-center my-0\"><i className=\"fas fa-plus-circle fa-2x\"></i></p>\r\n                </div>\r\n              </Auth>\r\n              <NavLink\r\n                to={'/explore'}\r\n                className=\"navbar-cs__button\"\r\n                activeClassName={'bg-brand text-white'}\r\n                data-balloon-pos=\"left\"\r\n                aria-label=\"Explore\"\r\n                data-balloon-blunt>\r\n                <p className=\"text-center my-0\"><i className=\"fas fa-compass fa-2x\"></i></p>\r\n              </NavLink>\r\n              <a\r\n                href='https://www.github.com/fliotta/reactsocial'\r\n                className=\"navbar-cs__button\"\r\n                target=\"_blank\"\r\n                data-balloon-pos=\"left\"\r\n                aria-label=\"Source code\"\r\n                data-balloon-blunt>\r\n                <p className=\"text-center my-0\"><i className=\"fab fa-github fa-2x\"></i></p>\r\n              </a>\r\n              <Auth>\r\n                <div\r\n                  className=\"navbar-cs__button\"\r\n                  onClick={this.props.logout}\r\n                  data-balloon-pos=\"left\"\r\n                  aria-label=\"Logout\"\r\n                  data-balloon-blunt>\r\n                  <p className=\"text-center my-0\"><i className=\"fas fa-sign-out-alt fa-2x\"></i></p>\r\n                </div>\r\n              </Auth>\r\n              <Auth whenLogged={false}>\r\n                <NavLink\r\n                  to='/'\r\n                  className=\"navbar-cs__button\"\r\n                  onClick={this.props.logout}\r\n                  data-balloon-pos=\"left\"\r\n                  aria-label=\"Login\"\r\n                  data-balloon-blunt>\r\n                  <p className=\"text-center my-0\"><i className=\"fas fa-sign-in-alt fa-2x\"></i></p>\r\n                </NavLink>\r\n              </Auth>\r\n            </div>\r\n            <div className=\"d-none d-md-block\">\r\n              <img src=\"assets/images/small_logo.png\" className=\"d-block mx-auto img-fluid\" />\r\n            </div>\r\n          </div>\r\n        }\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  isVisible: state.app.navbar.isVisible,\r\n  profile: state.app.logged\r\n})\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  logout: () => dispatch(logout()),\r\n  togglePostModal: () => dispatch(togglePostModal()),\r\n  toggleSettingsModal: () => dispatch(toggleSettingsModal()),\r\n})\r\nexport default connect(stateToProps, dispatchToProps)(Navbar);","D:\\kemunto\\react-ui\\src\\api\\api.js",["181","182","183","184"],"D:\\kemunto\\react-ui\\src\\actions\\users.js",["185","186"],"import api from '../api/api';\r\n\r\nconst API = new api();\r\n\r\nexport const DISCOVER_USERS = 'DISCOVER_USERS';\r\nexport const RESTART_STATE = 'RESTART_STATE';\r\nexport const SET_LOADING = 'SET_LOADING';\r\n\r\nexport const discoverUsers = (username) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n\r\n    dispatch(setLoading(true));\r\n\r\n    API.get('discover/users')\r\n      .then(res => {\r\n        if (res.code == 200)\r\n          dispatch({\r\n            type: DISCOVER_USERS,\r\n            payload: res.response\r\n          })\r\n\r\n        dispatch(setLoading(false));\r\n      })\r\n      .catch(e => console.log(e));\r\n  }\r\n}\r\n\r\nexport const setLoading = loading => {\r\n  return dispatch => dispatch({\r\n    type: SET_LOADING,\r\n    payload: {\r\n      loading\r\n    }\r\n  })\r\n}\r\n\r\nexport const restartState = (data) => {\r\n  return dispatch => dispatch({\r\n    type: RESTART_STATE\r\n  })\r\n}","D:\\kemunto\\react-ui\\src\\actions\\posts.js",["187","188","189","190","191","192","193","194","195"],"import cogoToast from 'cogo-toast';\r\nimport api from '../api/api';\r\n\r\nconst API = new api();\r\n\r\nexport const FETCH_USER_POSTS = '[POST] FETCH_USER_POSTS';\r\nexport const NEW_POST = '[POST] NEW_POST';\r\nexport const DISCOVER_POSTS = '[POST] DISCOVER_POSTS';\r\nexport const DELETE_POST = '[POST] DELETE_POST';\r\nexport const RESTART_STATE = '[POST] RESTART_STATE';\r\nexport const SET_LOADING = '[POST] SET_LOADING';\r\nexport const LIKE_POST = '[POST] LIKE_POST';\r\nexport const UNLIKE_POST = '[POST] UNLIKE_POST';\r\nexport const UPDATE_PROFILE_PICTURE = '[POST] UPDATE_PROFILE_PICTURE';\r\n\r\nexport const fetchUserPosts = (usernamePosts) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n    const { offset, quantity, isThereMore, loading } = state.posts;\r\n    const { username } = state.app.logged;\r\n\r\n    if (isThereMore && !loading) {\r\n      dispatch(setLoading(true))\r\n\r\n      API.get(`user/${usernamePosts}/posts?offset=${offset}&quantity=${quantity}`)\r\n        .then(res => {\r\n          if (res.code == 200)\r\n            dispatch({\r\n              type: FETCH_USER_POSTS,\r\n              payload: res.response.map(post => ({\r\n                ...post,\r\n                liked: post.likedBy.includes(username)\r\n              }))\r\n            })\r\n        })\r\n        .catch(e => console.log(e))\r\n        .then(() => dispatch(setLoading(false)));\r\n    } else if (!loading) {\r\n      cogoToast.info(`You have reached the bottom 😱!`, {\r\n        position: 'bottom-right'\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const discoverPosts = (username) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n    const { isThereMore, loading } = state.posts;\r\n    const { _id: id } = state.app.logged;\r\n\r\n    if (isThereMore && !loading) {\r\n      dispatch(setLoading(true));\r\n      API.get('discover/posts')\r\n        .then(res => {\r\n          if (res.code == 200)\r\n            dispatch({\r\n              type: DISCOVER_POSTS,\r\n              payload: res.response.map(post => ({\r\n                ...post,\r\n                liked: post.likedBy.includes(id)\r\n              }))\r\n            })\r\n\r\n        })\r\n        .catch(e => console.log(e))\r\n        .then(() => dispatch(setLoading(false)));\r\n    } else {\r\n      cogoToast.info(`You have reached the bottom 😱!`, {\r\n        position: 'bottom-right'\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const newPost = (data) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n    const { username: profile } = state.profile;\r\n    const { username, message } = data;\r\n\r\n    API.post(`user/${username}/new/post`, { ...data })\r\n      .then(res => {\r\n        if (res.code == 200) {\r\n          cogoToast.success(`Post submitted`, {\r\n            position: 'bottom-right'\r\n          });\r\n\r\n          if (username == profile) {\r\n            dispatch({\r\n              type: NEW_POST,\r\n              payload: {\r\n                newPost: res.response\r\n              }\r\n            })\r\n          }\r\n        }\r\n      })\r\n      .catch(e => {\r\n        cogoToast.error(`There were an error submitting your post.`, {\r\n          position: 'bottom-right'\r\n        });\r\n      });\r\n  }\r\n}\r\n\r\nexport const likePost = (postId) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n\r\n    API.post(`post/${postId}/like`)\r\n      .then(res => {\r\n        if (res.code == 200)\r\n          dispatch({\r\n            type: LIKE_POST,\r\n            payload: {\r\n              likedPost: res.response\r\n            }\r\n          })\r\n      })\r\n      .catch(e => console.log(e));\r\n  }\r\n}\r\n\r\nexport const unlikePost = (postId) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n\r\n    API.post(`post/${postId}/unlike`)\r\n      .then(res => {\r\n        if (res.code == 200)\r\n          dispatch({\r\n            type: UNLIKE_POST,\r\n            payload: {\r\n              unlikedPost: res.response\r\n            }\r\n          })\r\n      })\r\n      .catch(e => console.log(e));\r\n  }\r\n}\r\n\r\nexport const deletePost = (data) => {\r\n  return dispatch => {\r\n    const { postId } = data;\r\n    API.delete(`post/${postId}`)\r\n      .then(res => {\r\n        cogoToast.warn(`Post deleted`, {\r\n          position: 'bottom-right'\r\n        });\r\n        dispatch({\r\n          type: DELETE_POST,\r\n          payload: {\r\n            ...res\r\n          }\r\n        })\r\n      })\r\n      .catch(e => console.log(e));\r\n  }\r\n}\r\n\r\nexport const setLoading = loading => {\r\n  return dispatch => dispatch({\r\n    type: SET_LOADING,\r\n    payload: {\r\n      loading\r\n    }\r\n  })\r\n}\r\n\r\nexport const updatePostsPicture = url => {\r\n\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n    const username = state.app.logged.username;\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE_PICTURE,\r\n      payload: {\r\n        url, username\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const restartState = (data) => {\r\n  return dispatch => dispatch({\r\n    type: RESTART_STATE\r\n  })\r\n}","D:\\kemunto\\react-ui\\src\\actions\\profile.js",["196"],"import cogoToast from 'cogo-toast';\r\nimport api from '../api/api';\r\n\r\nconst API = new api();\r\n\r\nexport const FETCH_PROFILE = '[PROFILE] FETCH_PROFILE';\r\nexport const NEW_POST = '[PROFILE] NEW_POST';\r\nexport const RESTART_STATE = '[PROFILE] RESTART_STATE';\r\nexport const SET_LOADING = '[PROFILE] SET_LOADING';\r\nexport const UPDATE_PROFILE_PICTURE = '[PROFILE] UPDATE_PROFILE_PICTURE';\r\nexport const TOGGLE_EDITING_DESCRIPTION = '[PROFILE] TOGGLE_EDITING_DESCRIPTION';\r\nexport const SET_PROFILE_DESCRIPTION = '[APP] SET_PROFILE_DESCRIPTION';\r\nexport const TOGGLE_SIDENAV = '[PROFILE] TOGGLE_SIDENAV';\r\n\r\nexport const toggleSidenav = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TOGGLE_SIDENAV\r\n    });\r\n  }\r\n}\r\n\r\nexport const setDescription = description => {\r\n  return dispatch => {\r\n    cogoToast.success(`Description updated!`, {\r\n      position: 'bottom-right'\r\n    });\r\n    dispatch({\r\n      type: SET_PROFILE_DESCRIPTION,\r\n      payload: {\r\n        description\r\n      }\r\n    });\r\n\r\n    // dispatch(resetLastConnection())\r\n  }\r\n}\r\n\r\nexport const toggleEditingDescription = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: TOGGLE_EDITING_DESCRIPTION\r\n    })\r\n  }\r\n}\r\nexport const updateProfilePicture = (url) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: UPDATE_PROFILE_PICTURE,\r\n      payload: {\r\n        url\r\n      }\r\n    })\r\n  }\r\n}\r\nexport const fetchProfile = (username) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n    dispatch(setLoading(true));\r\n\r\n    API.get(`user/${username}`)\r\n      .then(res => {\r\n        if (res.code == 200)\r\n          dispatch({\r\n            type: FETCH_PROFILE,\r\n            payload: {\r\n              ...res.response,\r\n              ownProfile: state.app.logged.username === res.response.username\r\n            }\r\n          })\r\n      })\r\n      .catch(e => {\r\n        switch (e.response.status) {\r\n          case 404:\r\n            cogoToast.danger(\"404: User not found\", {\r\n              position: 'bottom-right'\r\n            });\r\n            break;\r\n          default:\r\n            cogoToast.danger(\"Unexpected error\", {\r\n              position: 'bottom-right'\r\n            });\r\n            break;\r\n        }\r\n      })\r\n      .then(() => {\r\n        dispatch(setLoading(false));\r\n      })\r\n  }\r\n}\r\n\r\nexport const setLoading = loading => {\r\n  return dispatch => dispatch({\r\n    type: SET_LOADING,\r\n    payload: {\r\n      loading\r\n    }\r\n  })\r\n}\r\n\r\nexport const restartState = (data) => {\r\n  return dispatch => dispatch({\r\n    type: RESTART_STATE\r\n  })\r\n}","D:\\kemunto\\react-ui\\src\\components\\AuthForm.js",["197"],"import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AuthForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: e.target.username.value,\r\n      password: e.target.password.value\r\n    }\r\n\r\n    this.props.onSuccess({ ...user })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <fieldset disabled={this.props.isLoading}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\" className=\"mb-1 text-muted\">\r\n                <small>Username</small>\r\n              </label>\r\n              <input type=\"text\" name=\"username\" id=\"username\" className=\"form-control rounded-0\" required minLength=\"5\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\" className=\"mb-1 text-muted\">\r\n                <small>Password</small>\r\n              </label>\r\n              <input type=\"password\" name=\"password\" id=\"password\" className=\"form-control rounded-0\" required minLength=\"5\" />\r\n            </div>\r\n            <button className=\"btn btn-brand text-light float-right border-0 rounded-pill\">{this.props.type == 'signup' ? \"Sign Up\" : \"Login\"}</button>\r\n            {this.props.backMethod &&\r\n              <button\r\n                onClick={this.props.backMethod}\r\n                type=\"button\"\r\n                className=\"btn btn-brand-secondary text-white float-right border-0 rounded-pill mx-3\">\r\n                Go back\r\n\t\t\t\t\t\t\t</button>\r\n            }\r\n          </fieldset>\r\n        </form>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  isAuth: state.app.logged.isLogged,\r\n  isLoading: state.app.logged.isLoading\r\n});\r\n\r\nexport default connect(stateToProps)(AuthForm);","D:\\kemunto\\react-ui\\src\\components\\Loading.js",["198","199"],"import React from 'react';\r\n\r\nexport default (props) => (\r\n  <div className={'spinner-border text-brand' + ' ' + props.classes}>\r\n    <span className=\"sr-only\">Loading...</span>\r\n  </div>\r\n);","D:\\kemunto\\react-ui\\src\\components\\UserCard.js",["200","201"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass UserCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'user-card position-relative my-5 ' + this.props.class}>\r\n        <img src={this.props.profilePic} className=\"rounded-circle user-card__image bg-brand\" />\r\n        <div className=\"user-card__body\">\r\n          <div className=\"user-card__body__info d-flex justify-content-center d-md-block\">\r\n            <h3 className=\"user-card__body__username montserrat\">{this.props.username}</h3>\r\n            <p className=\"mb-3 d-none d-md-block user-card__body__info__description montserrat\">{this.props.description}</p>\r\n          </div>\r\n          <div className=\"user-card__body__actions d-flex justify-content-center d-md-block\">\r\n            <Link to={'/u/' + this.props.username}>\r\n              <button className=\"btn btn-brand btn-sm rounded-pill text-white px-3\">VIEW</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserCard;","D:\\kemunto\\react-ui\\src\\components\\Post.js",["202","203","204","205","206"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\nimport dayjs from 'dayjs';\r\nimport { likePost, unlikePost, deletePost } from '../actions/posts';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Linkify from 'react-linkify';\r\nimport cogoToast from \"cogo-toast\";\r\nimport YouTube from 'react-youtube';\r\n\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deletePost = this.deletePost.bind(this);\r\n    this.canDeleteIt = this.canDeleteIt.bind(this);\r\n    this.handleLike = this.handleLike.bind(this);\r\n    this.parseText = this.parseText.bind(this);\r\n\r\n    dayjs.extend(relativeTime)\r\n  }\r\n\r\n  deletePost() {\r\n    this.props.deletePost({ postId: this.props._id })\r\n  }\r\n\r\n  canDeleteIt() {\r\n    if (this.props.session._id && this.props.author._id) {\r\n      // If i own the post.\r\n      return this.props.session._id == this.props.author._id\r\n    } else if (this.props.session.username && this.props.match.params.id) {\r\n      // If the post is in my profile, even if i don't own it.\r\n      return this.props.session.username == this.props.match.params.id;\r\n    }\r\n  }\r\n\r\n  parseText() {\r\n    const reg = /(http:\\/\\/|https:\\/\\/)((\\w|=|\\?|\\.|\\/|&|-)+)/g;\r\n    const textFractions = this.props.message.split\r\n  }\r\n\r\n  handleLike() {\r\n    if (!this.props.logged) {\r\n      return cogoToast.warn(`You must be logged in to perform this action 😢`, {\r\n        position: 'bottom-right'\r\n      });\r\n    }\r\n\r\n    if (this.props.liked) {\r\n      this.props.unlikePost(this.props._id)\r\n    } else {\r\n      this.props.likePost(this.props._id)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card w-100 my-5 post\">\r\n        <div className=\"card-header bg-white pb-0 border-0 d-flex justify-content-between\">\r\n          <div>\r\n            <small className=\"text-muted\">{dayjs().from(dayjs(this.props.createdAt))} ago.</small>\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div>\r\n              <Link to={'/u/' + this.props.author.username}>{this.props.author.username}</Link>\r\n            </div>\r\n            <div className=\"post__avatar ml-2\">\r\n              <Link to={'/u/' + this.props.author.username}>\r\n                <img src={this.props.author.profilePic} className=\"img-fluid cursor-pointer rounded-circle\" />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body px-4 py-4\">\r\n          <Linkify properties={{ target: '_blank' }}>\r\n            <p className=\"my-0 py-0 ws-pre-line\">{this.props.message}</p>\r\n          </Linkify>\r\n          {this.props.extra &&\r\n            <div className=\"mt-3\">\r\n              <YouTube\r\n                videoId={this.props.extra.value}\r\n                opts={{\r\n                  width: '100%',\r\n                  height: '400'\r\n                }} />\r\n            </div>\r\n          }\r\n          <div onClick={this.handleLike} className=\"d-inline-flex px-3 py-1 text-brand-secondary rounded-pill post__likes cursor-pointer\">\r\n            <span>\r\n              {this.props.likes} <i className={`mr-1 ${this.props.liked ? 'fas fa-heart' : 'far fa-heart'}`}></i>\r\n            </span>\r\n          </div>\r\n          {this.canDeleteIt() &&\r\n            <div onClick={this.deletePost} className=\"d-inline-flex px-3 py-1 rounded-pill post__delete cursor-pointer\">\r\n              <span className=\"text-secondary\">\r\n                <i className=\"fas fa-times\"></i>\r\n              </span>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst stateToProps = state => ({\r\n  logged: state.app.logged.isLogged,\r\n  session: state.app.logged\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  deletePost: data => dispatch(deletePost(data)),\r\n  likePost: postId => dispatch(likePost(postId)),\r\n  unlikePost: postId => dispatch(unlikePost(postId))\r\n});\r\n\r\nexport default connect(stateToProps, dispatchToProps)(withRouter(Post));","D:\\kemunto\\react-ui\\src\\actions\\settings.js",["207"],"import FormData from 'form-data'\r\nimport { setProfilePic, setDescription, toggleProfilePictureModal } from '../actions/app';\r\nimport { updatePostsPicture } from '../actions/posts';\r\nimport { updateProfilePicture } from '../actions/profile';\r\nimport api from '../api/api';\r\n\r\nconst API = new api();\r\n\r\nexport const CHANGE_IMAGE = 'CHANGE_IMAGE';\r\nexport const CHANGE_DESCRIPTION = 'CHANGE_DESCRIPTION';\r\n\r\n\r\nexport const changeImage = (binary, crop) => {\r\n  return dispatch => {\r\n    const payload = new FormData();\r\n    payload.append('crop', JSON.stringify(crop));\r\n    payload.append('newImage', binary);\r\n\r\n\r\n    API.patch(`user/settings/profilePicture`, payload, {\r\n      headers: {\r\n        'accept': 'application/json',\r\n        'Accept-Language': 'en-US,en;q=0.8',\r\n        'Content-Type': `multipart/form-data; boundary=${payload._boundary}`,\r\n      }\r\n    })\r\n      .then(res => {\r\n        dispatch(toggleProfilePictureModal());\r\n        dispatch(updatePostsPicture(res.response.path));\r\n        dispatch(updateProfilePicture(res.response.path));\r\n        dispatch(setProfilePic(res.response.path));\r\n      })\r\n      .catch(e => console.log(e))\r\n  }\r\n}\r\n\r\nexport const changeDescription = description => {\r\n  return dispatch => {\r\n\r\n    API.patch(`user/settings/description`, { description })\r\n      .then(res => {\r\n        if (res.code == 200)\r\n          dispatch(setDescription(res.response.newDescription));\r\n      })\r\n      .catch(e => console.log(e));\r\n  }\r\n}","D:\\kemunto\\react-ui\\src\\components\\NewPostForm.js",["208"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { newPost } from '../actions/posts';\r\n\r\nclass NewPostForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      youtubeInput: false,\r\n      randomPhrasesTextarea: [\r\n        \"What are you thinking?\",\r\n        \"It's a beautiful day isn't it\",\r\n        \"Tell us a story, i know you're not boring ♪\",\r\n        \"In many ways, still miss good old days.\"\r\n      ],\r\n      selectedPlaceholderPhrase: null\r\n    };\r\n\r\n    this.handleNewPost = this.handleNewPost.bind(this);\r\n    this.getRandomQuote = this.getRandomQuote.bind(this);\r\n    this.toggleYoutubeInput = this.toggleYoutubeInput.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRandomQuote();\r\n  }\r\n\r\n  toggleYoutubeInput() {\r\n    this.setState(prevState => ({\r\n      youtubeInput: !prevState.youtubeInput\r\n    }));\r\n  }\r\n\r\n  getRandomQuote() {\r\n    const rand = Math.floor(Math.random() * this.state.randomPhrasesTextarea.length);\r\n    this.setState(({\r\n      selectedPlaceholderPhrase: this.state.randomPhrasesTextarea[rand]\r\n    }))\r\n  }\r\n\r\n  handleNewPost(e) {\r\n    e.preventDefault();\r\n\r\n    this.props.newPost({\r\n      username: this.props.profileId,\r\n      message: e.target.message.value,\r\n      extra: {\r\n        value: e.target.extra.value,\r\n        extraType: 'youtube'\r\n      }\r\n    });\r\n\r\n    e.target.message.value = '';\r\n    e.target.extra.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex\">\r\n        <div className=\"mr-4 d-none d-md-block\">\r\n          <img src={this.props.logged.profilePic} className=\"d-block mx-auto rounded-circle border\" style={{ width: '75px' }} />\r\n        </div>\r\n        <div className=\"mt-2 w-100\">\r\n          <form onSubmit={this.handleNewPost}>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                id=\"message\"\r\n                name=\"message\"\r\n                className=\"form-control border-top-0 border-left-0 border-right-0 border-brand rounded-0 profile__body__textarea__input\"\r\n                required\r\n                placeholder={this.state.selectedPlaceholderPhrase}>\r\n              </textarea>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input name=\"extra\" id=\"extra\" className={\"form-control mt-2 \" + (this.state.youtubeInput ? 'd-flex' : 'd-none')} placeholder=\"https://www.youtube.com/watch?v=dO368WjwyFs\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button type=\"submit\" className=\"btn btn-brand rounded-pill float-right text-white\">\r\n                <i className=\"fas fa-paper-plane\"></i> Submit\r\n            </button>\r\n              <button type=\"button\" onClick={this.toggleYoutubeInput} className=\"btn btn-brand-secondary text-white rounded-pill float-right px-3 mx-2\">\r\n                <i className=\"fab fa-youtube\"></i> Youtube\r\n            </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst stateToProps = state => ({\r\n  logged: state.app.logged,\r\n  profile: state.profile\r\n});\r\n\r\nconst dispatchToProps = dispatch => ({\r\n  newPost: value => dispatch(newPost(value)),\r\n})\r\n\r\nexport default connect(stateToProps, dispatchToProps)(NewPostForm);","D:\\kemunto\\react-ui\\src\\components\\ProfilePictureModal.js",[],"D:\\kemunto\\react-ui\\src\\components\\Auth.js",[],{"ruleId":"209","severity":2,"message":"210","line":6,"column":1,"nodeType":"211","endLine":6,"endColumn":44,"fix":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"213","replacedBy":"217"},{"ruleId":"215","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":4,"column":12,"nodeType":"221","messageId":"222","endLine":4,"endColumn":16},{"ruleId":"219","severity":1,"message":"223","line":4,"column":18,"nodeType":"221","messageId":"222","endLine":4,"endColumn":25},{"ruleId":"219","severity":1,"message":"224","line":7,"column":19,"nodeType":"221","messageId":"222","endLine":7,"endColumn":22},{"ruleId":"213","replacedBy":"225"},{"ruleId":"215","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":76,"column":5,"nodeType":"229","messageId":"230","endLine":81,"endColumn":6},{"ruleId":"231","severity":1,"message":"232","line":99,"column":17,"nodeType":"233","endLine":99,"endColumn":73},{"ruleId":"234","severity":1,"message":"235","line":106,"column":42,"nodeType":"236","messageId":"237","endLine":106,"endColumn":44},{"ruleId":"234","severity":1,"message":"238","line":121,"column":42,"nodeType":"236","messageId":"237","endLine":121,"endColumn":44},{"ruleId":"239","severity":1,"message":"240","line":13,"column":3,"nodeType":"241","messageId":"242","endLine":15,"endColumn":4},{"ruleId":"234","severity":1,"message":"235","line":114,"column":22,"nodeType":"236","messageId":"237","endLine":114,"endColumn":24},{"ruleId":"234","severity":1,"message":"235","line":137,"column":22,"nodeType":"236","messageId":"237","endLine":137,"endColumn":24},{"ruleId":"243","severity":1,"message":"244","line":21,"column":3,"nodeType":"245","endLine":130,"endColumn":4},{"ruleId":"234","severity":1,"message":"235","line":72,"column":51,"nodeType":"236","messageId":"237","endLine":72,"endColumn":53},{"ruleId":"234","severity":1,"message":"235","line":87,"column":51,"nodeType":"236","messageId":"237","endLine":87,"endColumn":53},{"ruleId":"234","severity":1,"message":"238","line":100,"column":54,"nodeType":"236","messageId":"237","endLine":100,"endColumn":56},{"ruleId":"234","severity":1,"message":"235","line":110,"column":36,"nodeType":"236","messageId":"237","endLine":110,"endColumn":38},{"ruleId":"243","severity":1,"message":"244","line":44,"column":3,"nodeType":"245","endLine":150,"endColumn":4},{"ruleId":"243","severity":1,"message":"244","line":7,"column":1,"nodeType":"245","endLine":24,"endColumn":2},{"ruleId":"243","severity":1,"message":"244","line":20,"column":3,"nodeType":"245","endLine":58,"endColumn":4},{"ruleId":"239","severity":1,"message":"240","line":5,"column":3,"nodeType":"241","messageId":"242","endLine":7,"endColumn":4},{"ruleId":"239","severity":1,"message":"240","line":11,"column":3,"nodeType":"241","messageId":"242","endLine":13,"endColumn":4},{"ruleId":"239","severity":1,"message":"240","line":10,"column":3,"nodeType":"241","messageId":"242","endLine":12,"endColumn":4},{"ruleId":null,"fatal":true,"severity":2,"message":"246","line":167,"column":9},{"ruleId":"219","severity":1,"message":"247","line":4,"column":10,"nodeType":"221","messageId":"222","endLine":4,"endColumn":14},{"ruleId":"219","severity":1,"message":"248","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":20},{"ruleId":"239","severity":1,"message":"240","line":9,"column":3,"nodeType":"241","messageId":"242","endLine":11,"endColumn":4},{"ruleId":"231","severity":1,"message":"232","line":26,"column":19,"nodeType":"233","endLine":26,"endColumn":161},{"ruleId":"249","severity":1,"message":"250","line":52,"column":15,"nodeType":"233","endLine":58,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":84,"column":15,"nodeType":"233","endLine":84,"endColumn":95},{"ruleId":"227","severity":1,"message":"228","line":27,"column":11,"nodeType":"229","messageId":"230","endLine":31,"endColumn":12},{"ruleId":"227","severity":1,"message":"228","line":58,"column":11,"nodeType":"229","messageId":"230","endLine":62,"endColumn":12},{"ruleId":"227","severity":1,"message":"228","line":90,"column":11,"nodeType":"229","messageId":"230","endLine":94,"endColumn":12},{"ruleId":"227","severity":1,"message":"228","line":123,"column":11,"nodeType":"229","messageId":"230","endLine":127,"endColumn":12},{"ruleId":"219","severity":1,"message":"251","line":11,"column":11,"nodeType":"221","messageId":"222","endLine":11,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":17,"column":22,"nodeType":"236","messageId":"237","endLine":17,"endColumn":24},{"ruleId":"234","severity":1,"message":"235","line":27,"column":24,"nodeType":"236","messageId":"237","endLine":27,"endColumn":26},{"ruleId":"234","severity":1,"message":"235","line":56,"column":24,"nodeType":"236","messageId":"237","endLine":56,"endColumn":26},{"ruleId":"219","severity":1,"message":"252","line":80,"column":23,"nodeType":"221","messageId":"222","endLine":80,"endColumn":30},{"ruleId":"234","severity":1,"message":"235","line":84,"column":22,"nodeType":"236","messageId":"237","endLine":84,"endColumn":24},{"ruleId":"234","severity":1,"message":"235","line":89,"column":24,"nodeType":"236","messageId":"237","endLine":89,"endColumn":26},{"ruleId":"219","severity":1,"message":"251","line":109,"column":11,"nodeType":"221","messageId":"222","endLine":109,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":113,"column":22,"nodeType":"236","messageId":"237","endLine":113,"endColumn":24},{"ruleId":"219","severity":1,"message":"251","line":127,"column":11,"nodeType":"221","messageId":"222","endLine":127,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":131,"column":22,"nodeType":"236","messageId":"237","endLine":131,"endColumn":24},{"ruleId":"234","severity":1,"message":"235","line":63,"column":22,"nodeType":"236","messageId":"237","endLine":63,"endColumn":24},{"ruleId":"234","severity":1,"message":"235","line":39,"column":109,"nodeType":"236","messageId":"237","endLine":39,"endColumn":111},{"ruleId":"243","severity":1,"message":"244","line":3,"column":1,"nodeType":"245","endLine":7,"endColumn":3},{"ruleId":"253","severity":1,"message":"254","line":4,"column":47,"nodeType":"236","messageId":"255","endLine":4,"endColumn":48},{"ruleId":"239","severity":1,"message":"240","line":4,"column":3,"nodeType":"241","messageId":"242","endLine":6,"endColumn":4},{"ruleId":"231","severity":1,"message":"232","line":11,"column":9,"nodeType":"233","endLine":11,"endColumn":97},{"ruleId":"234","severity":1,"message":"235","line":31,"column":37,"nodeType":"236","messageId":"237","endLine":31,"endColumn":39},{"ruleId":"234","severity":1,"message":"235","line":34,"column":42,"nodeType":"236","messageId":"237","endLine":34,"endColumn":44},{"ruleId":"219","severity":1,"message":"256","line":39,"column":11,"nodeType":"221","messageId":"222","endLine":39,"endColumn":14},{"ruleId":"219","severity":1,"message":"257","line":40,"column":11,"nodeType":"221","messageId":"222","endLine":40,"endColumn":24},{"ruleId":"231","severity":1,"message":"232","line":70,"column":17,"nodeType":"233","endLine":70,"endColumn":111},{"ruleId":"234","severity":1,"message":"235","line":42,"column":22,"nodeType":"236","messageId":"237","endLine":42,"endColumn":24},{"ruleId":"231","severity":1,"message":"232","line":62,"column":11,"nodeType":"233","endLine":62,"endColumn":129},"import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"258","text":"259"},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],["260"],["261"],"no-unused-vars","'post' is assigned a value but never used.","Identifier","unusedVar","'setPost' is assigned a value but never used.","'res' is assigned a value but never used.",["260"],["261"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Parsing error: Expected corresponding JSX closing tag for <div>\n\n\u001b[0m \u001b[90m 165 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 166 | \u001b[39m          )}\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 167 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mBottomScrollListener\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 168 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 169 | \u001b[39m    )\u001b[0m\n\u001b[0m \u001b[90m 170 | \u001b[39m  }\u001b[0m","'Link' is defined but never used.","'NewPostModal' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'state' is assigned a value but never used.","'message' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'reg' is assigned a value but never used.","'textFractions' is assigned a value but never used.",[0,222],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport { reconnect } from './actions/app';\r\nimport AppRouter from './routes/AppRouter';;","no-global-assign","no-unsafe-negation"]